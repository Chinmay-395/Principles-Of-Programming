1;;
1+1;;
1.2 + 3.4;;
1.2 +. 3.4;;
1.2 + 3.4;;
float_of_int 1.2 + float_of_int 3.4;;
int_of_float 1.2 + int_of_float 3.4;;
"hello";;
"hello" ^ "bye";;
"hello";;
'a';;
true;;
false;;
true && false;;
length "hello";;
String.length "hello";;
Char.uppercase_ascii 'a';;
2=2;;
2<>2;;
2==2;;
2!=2;;
"hello"=="hello";;
"hello"="hello";;
2<4;;
"hello" < "bye";;
if 2<4 then 1 else 2;;
if 2 then 1 else 2;;
if 2<4 then 1 else "hello";;
if 2<4 then "bye" else "hello";;
if (if 2<3 then 1 else 2)<3 then "a" else "b";;
x+1;;
let x=2;;
x+1;;
let x=7 in x+x;;
x;;
(let x=7 in x+x)+x;;
let x=2 in let y=3 in x+y;;
let f i = i+1;;
1;;
true;;
"hello";;
'a';;
f;;
f 2;;
f (f 2);;
f f 2;;
f @@ f 2;;
f @@ f @@ f 2;;
f 2 3;;
let f i = if i then 1 else 2;;
f true;;
f (2<3);;
f (2>3);;
let f i = if 2>3 then "a" else i;;
f "b";;
let f i = if i<2 then "a" else i;;
let f i j = i+j;;
f 2 3;;
f 2 (f 2 3);;
f 2 3 4;;
f 2;;
(* partial function application *);;
let f i = i+1;;
let g i j = i+j;;
f 1;;
f 2;;
let succ = g 1;;
succ 1;;
succ 2;;
let f i j = if i then j else 7;;
f true 2;;
let f i = 3;;
f 2;;
f true;;
f "hello";;
f 'a';;
f f;;
(2,3);;
(2,3,5);;
(2,3,true);;
(2,(3,true));;
let f (x,y) = (x+1,y-1);;
f (1,2);;
let f (x,y) = (y,x) ;;
f (2,true);;
f (2,3,4);;
f (2,(3,4));;
f (2,true);;
f ("hello",'a');;
let f g = if g 2 then 3 else 4;;
let f g x = g (g x);;
1;;
true;;
"hello";;
fun i -> i+1;;
let f = fun i -> i+1;;
f 2;;
let f i = i+1;;
f 2;;
let f g x = g (g x);;
f (fun i -> i*i) 2;;
f (fun i -> i^"!") "hello";;
(fun i -> i^"!") "hello";;
(fun i -> i^"!") ((fun i -> i^"!") "hello");;
fun i -> i+1;;
let a = fun i -> i+1;;
a 2;;
fun i j -> i+j;;
(fun i j -> i+j) 1 2 ;;
(1,2);;
( (fun i->i+1), (fun i -> i^"!"));;
[1;2;3];;
[true;false];;
["hello";"bye"];;
[(fun i->i+1); (fun i -> i^"!")];;
[(fun i->i+1); (fun i -> i*i)];;
[1;true] ;;
[1] = [1;1];;
[1;2] = [2;1];;
List.hd [1;2;3];;
List.tl [1;2;3];;
List.hd;;
List.tl;;
List.hd [];;
List.tl [];;
[1;2] @ [3;4];;
1 :: [2;3];;
1 :: 2 :: 3 :: [];;
#use "ex.ml";;
fact 10;;
fact (-2);;
#use "ex.ml";;
fact (-2);;
#use "ex.ml";;
f 20 "hello";;
#use "ex.ml";;
size [1;2;3;3];;
#use "ex.ml";;
sum [1;2;3;4];;
#use "ex.ml";;
f [1;2;3;4];;
#use "ex.ml";;
take 2 [1;2;3] => [1;2];;
take 2 [1;2;3];;
take 20 [1;2;3];;
take 0 [1;2;3];;
#use "ex.ml";;
rad [1;2;2;2;3;1;4;4;4] ;;